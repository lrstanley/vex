networks:
  vault:
    driver: bridge
services:
  vault1:
    image: hashicorp/vault:latest
    container_name: vault1
    hostname: vault1
    entrypoint: ["/init.sh"]
    command: []
    cap_add: ["IPC_LOCK"]
    user: root
    volumes:
      - ./bootstrap/node-init.sh:/init.sh:ro
      - ./bootstrap/config.hcl:/config.hcl:ro
      - ./data/vault1/data:/vault/data
    ports: ["8200:8200"]
    networks: [vault]
    restart: unless-stopped
    attach: false
  vault2:
    image: hashicorp/vault:latest
    container_name: vault2
    hostname: vault2
    entrypoint: ["/init.sh"]
    command: []
    cap_add: ["IPC_LOCK"]
    user: root
    volumes:
      - ./bootstrap/node-init.sh:/init.sh:ro
      - ./bootstrap/config.hcl:/config.hcl:ro
      - ./data/vault2/data:/vault/data
    ports: ["8201:8200"]
    networks: [vault]
    restart: unless-stopped
    attach: false
  vault3:
    image: hashicorp/vault:latest
    container_name: vault3
    hostname: vault3
    entrypoint: ["/init.sh"]
    command: []
    cap_add: ["IPC_LOCK"]
    user: root
    volumes:
      - ./bootstrap/node-init.sh:/init.sh:ro
      - ./bootstrap/config.hcl:/config.hcl:ro
      - ./data/vault3/data:/vault/data
    ports: ["8202:8200"]
    networks: [vault]
    restart: unless-stopped
    attach: false
  vault-cluster-init:
    build:
      context: .
      dockerfile: ./bootstrap/Dockerfile.cluster-init
    container_name: vault-cluster-init
    hostname: vault-cluster-init
    user: root
    volumes:
      - ./bootstrap/cluster-init.sh:/init.sh:ro
      - ./bootstrap/generate-data.sh:/generate-data.sh:ro
      - ./init:/init
    networks: [vault]
    restart: on-failure
    depends_on: [vault1, vault2, vault3]
